{"ast":null,"code":"var _jsxFileName = \"/Users/sakshirawat/Desktop/appointmentFrontend/frontend/src/pages/SignIn.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'; // Hooks for Redux state management\nimport { loginStart, loginSuccess, loginFailure } from '../store/userSlice'; // Redux actions\nimport { useNavigate } from 'react-router-dom'; // Navigation hook from React Router\nimport image3 from '../assets/image3.jpg'; // Background image\nimport imageSignIn from '../assets/imageSignIn.webp'; // Logo/image above form\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SignIn = () => {\n  _s();\n  const dispatch = useDispatch(); // To dispatch Redux actions\n  const navigate = useNavigate(); // To navigate programmatically\n\n  // Extract loading and error states from Redux store (user slice)\n  const {\n    loading,\n    error\n  } = useSelector(state => state.user);\n\n  // Local component state for controlled input fields\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  // Function to handle form submission\n  const handleSubmit = async e => {\n    e.preventDefault(); // Prevent default form submit behavior (page reload)\n\n    dispatch(loginStart()); // Dispatch loginStart action to set loading state\n\n    try {\n      // Call signin API endpoint with email and password in request body\n      const response = await fetch(`${process.env.REACT_APP_BASE_URL}/auth/signin`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        // Tell server we are sending JSON data\n        body: JSON.stringify({\n          email,\n          password\n        }) // Convert email and password to JSON string\n      });\n\n      // Parse JSON response from server\n      const data = await response.json();\n\n      // If response is not OK, throw an error to be caught below\n      if (!response.ok) {\n        throw new Error(data.message || 'Authentication failed');\n      }\n\n      // Store the received JWT token in localStorage for later authenticated requests\n      localStorage.setItem('token', data.token);\n\n      // Dispatch loginSuccess action with user info and token to update Redux store\n      dispatch(loginSuccess({\n        user: {\n          id: data.userId,\n          name: data.name\n        },\n        token: data.token\n      }));\n      alert('Login successful!'); // Show success alert to user\n    } catch (err) {\n      // If there was any error (network or API), dispatch loginFailure with error message\n      dispatch(loginFailure(err.message));\n    }\n\n    // After login attempt, navigate to '/layout' page regardless of success/failure\n    navigate('/layout');\n  };\n\n  // Handle clicking the close (X) button, navigating back to home page\n  const handleClose = () => {\n    navigate('/');\n  };\n  return (\n    /*#__PURE__*/\n    // Full screen container with background image, flexbox centering\n    _jsxDEV(\"div\", {\n      className: \"w-full h-screen bg-cover bg-center flex items-center justify-center relative\",\n      style: {\n        backgroundImage: `url(${image3})`\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"absolute inset-0 bg-black bg-opacity-50 backdrop-blur-sm z-0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relative z-10 w-full max-w-md bg-white p-8 rounded-lg shadow-lg mx-4 text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleClose // Go to home page when clicked\n          ,\n          \"aria-label\": \"Close\" // Accessibility label for screen readers\n          ,\n          className: \"absolute top-4 right-4 z-50 text-black p-2 rounded-full hover:bg-red-700 focus:outline-none\",\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            xmlns: \"http://www.w3.org/2000/svg\",\n            className: \"h-6 w-6\",\n            fill: \"none\",\n            viewBox: \"0 0 24 24\",\n            stroke: \"currentColor\",\n            strokeWidth: 2,\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\",\n              d: \"M6 18L18 6M6 6l12 12\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: imageSignIn,\n          alt: \"Logo\",\n          className: \"w-50 h-40 mx-auto mb-4 object-contain\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-2xl font-bold mb-6 text-blue-600\",\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 9\n        }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mb-4 text-red-600 text-center\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          className: \"space-y-4 text-left\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"email\",\n              className: \"block text-sm font-medium text-gray-700\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"email\",\n              type: \"email\",\n              value: email // Controlled input, value linked to state\n              ,\n              onChange: e => setEmail(e.target.value) // Update email state on change\n              ,\n              required: true // HTML5 required validation\n              ,\n              className: \"w-full mt-1 p-2 border rounded focus:outline-none focus:ring-2 focus:ring-blue-400\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"password\",\n              className: \"block text-sm font-medium text-gray-700\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"password\",\n              type: \"password\",\n              value: password // Controlled input for password\n              ,\n              onChange: e => setPassword(e.target.value) // Update password state on change\n              ,\n              required: true,\n              className: \"w-full mt-1 p-2 border rounded focus:outline-none focus:ring-2 focus:ring-blue-400\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            disabled: loading // Disable button while loading\n            ,\n            className: `w-full py-2 rounded text-white ${loading ? 'bg-blue-400' : 'bg-blue-600 hover:bg-blue-700'} transition`,\n            children: loading ? 'Signing In...' : 'Sign In'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }, this)\n  );\n};\n_s(SignIn, \"YJX1ClV0+OKXY95T+5UfvjP8PuQ=\", false, function () {\n  return [useDispatch, useNavigate, useSelector];\n});\n_c = SignIn;\nexport default SignIn;\nvar _c;\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"names":["React","useState","useDispatch","useSelector","loginStart","loginSuccess","loginFailure","useNavigate","image3","imageSignIn","jsxDEV","_jsxDEV","SignIn","_s","dispatch","navigate","loading","error","state","user","email","setEmail","password","setPassword","handleSubmit","e","preventDefault","response","fetch","process","env","REACT_APP_BASE_URL","method","headers","body","JSON","stringify","data","json","ok","Error","message","localStorage","setItem","token","id","userId","name","alert","err","handleClose","className","style","backgroundImage","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","xmlns","fill","viewBox","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","src","alt","onSubmit","htmlFor","type","value","onChange","target","required","disabled","_c","$RefreshReg$"],"sources":["/Users/sakshirawat/Desktop/appointmentFrontend/frontend/src/pages/SignIn.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';   // Hooks for Redux state management\nimport { loginStart, loginSuccess, loginFailure } from '../store/userSlice';  // Redux actions\nimport { useNavigate } from 'react-router-dom';  // Navigation hook from React Router\nimport image3 from '../assets/image3.jpg';        // Background image\nimport imageSignIn from '../assets/imageSignIn.webp';  // Logo/image above form\n\nconst SignIn = () => {\n  const dispatch = useDispatch();    // To dispatch Redux actions\n  const navigate = useNavigate();    // To navigate programmatically\n\n  // Extract loading and error states from Redux store (user slice)\n  const { loading, error } = useSelector(state => state.user);\n\n  // Local component state for controlled input fields\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  // Function to handle form submission\n  const handleSubmit = async e => {\n    e.preventDefault();            // Prevent default form submit behavior (page reload)\n\n    dispatch(loginStart());        // Dispatch loginStart action to set loading state\n\n    try {\n      // Call signin API endpoint with email and password in request body\n      const response = await fetch(`${process.env.REACT_APP_BASE_URL}/auth/signin`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },  // Tell server we are sending JSON data\n        body: JSON.stringify({ email, password }),        // Convert email and password to JSON string\n      });\n\n      // Parse JSON response from server\n      const data = await response.json();\n\n      // If response is not OK, throw an error to be caught below\n      if (!response.ok) {\n        throw new Error(data.message || 'Authentication failed');\n      }\n\n      // Store the received JWT token in localStorage for later authenticated requests\n      localStorage.setItem('token', data.token);\n\n      // Dispatch loginSuccess action with user info and token to update Redux store\n      dispatch(loginSuccess({ user: { id: data.userId, name: data.name }, token: data.token }));\n\n      alert('Login successful!');  // Show success alert to user\n    } catch (err) {\n      // If there was any error (network or API), dispatch loginFailure with error message\n      dispatch(loginFailure(err.message));\n    }\n\n    // After login attempt, navigate to '/layout' page regardless of success/failure\n    navigate('/layout');\n  };\n\n  // Handle clicking the close (X) button, navigating back to home page\n  const handleClose = () => {\n    navigate('/');\n  };\n\n  return (\n    // Full screen container with background image, flexbox centering\n    <div\n      className=\"w-full h-screen bg-cover bg-center flex items-center justify-center relative\"\n      style={{ backgroundImage: `url(${image3})` }}\n    >\n      {/* Dark overlay with blur effect to dim the background image */}\n      <div className=\"absolute inset-0 bg-black bg-opacity-50 backdrop-blur-sm z-0\" />\n   \n      {/* The actual form container with white background, padding, rounded corners, shadow */}\n      <div className=\"relative z-10 w-full max-w-md bg-white p-8 rounded-lg shadow-lg mx-4 text-center\">\n\n        {/* Close button positioned top-right corner */}\n        <button\n          onClick={handleClose}                 // Go to home page when clicked\n          aria-label=\"Close\"                    // Accessibility label for screen readers\n          className=\"absolute top-4 right-4 z-50 text-black p-2 rounded-full hover:bg-red-700 focus:outline-none\"\n        >\n          {/* SVG icon for \"X\" */}\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            className=\"h-6 w-6\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n            stroke=\"currentColor\"\n            strokeWidth={2}\n          >\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M6 18L18 6M6 6l12 12\" />\n          </svg>\n        </button>\n\n        {/* Logo/image shown above the heading */}\n        <img src={imageSignIn} alt=\"Logo\" className=\"w-50 h-40 mx-auto mb-4 object-contain\" />\n\n        {/* Heading for the form */}\n        <h2 className=\"text-2xl font-bold mb-6 text-blue-600\">Sign In</h2>\n\n        {/* Show error message if there is any error from Redux state */}\n        {error && <p className=\"mb-4 text-red-600 text-center\">{error}</p>}\n\n        {/* Sign In form */}\n        <form onSubmit={handleSubmit} className=\"space-y-4 text-left\">\n\n          {/* Email input */}\n          <div>\n            <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700\">Email</label>\n            <input\n              id=\"email\"\n              type=\"email\"\n              value={email}                      // Controlled input, value linked to state\n              onChange={e => setEmail(e.target.value)}  // Update email state on change\n              required                          // HTML5 required validation\n              className=\"w-full mt-1 p-2 border rounded focus:outline-none focus:ring-2 focus:ring-blue-400\"\n            />\n          </div>\n\n          {/* Password input */}\n          <div>\n            <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700\">Password</label>\n            <input\n              id=\"password\"\n              type=\"password\"\n              value={password}                  // Controlled input for password\n              onChange={e => setPassword(e.target.value)}  // Update password state on change\n              required\n              className=\"w-full mt-1 p-2 border rounded focus:outline-none focus:ring-2 focus:ring-blue-400\"\n            />\n          </div>\n\n          {/* Submit button, disabled when loading */}\n          <button\n            type=\"submit\"\n            disabled={loading}                // Disable button while loading\n            className={`w-full py-2 rounded text-white ${loading ? 'bg-blue-400' : 'bg-blue-600 hover:bg-blue-700'} transition`}\n          >\n            {/* Show dynamic text based on loading state */}\n            {loading ? 'Signing In...' : 'Sign In'}\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default SignIn;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa,CAAC,CAAG;AAC1D,SAASC,UAAU,EAAEC,YAAY,EAAEC,YAAY,QAAQ,oBAAoB,CAAC,CAAE;AAC9E,SAASC,WAAW,QAAQ,kBAAkB,CAAC,CAAE;AACjD,OAAOC,MAAM,MAAM,sBAAsB,CAAC,CAAQ;AAClD,OAAOC,WAAW,MAAM,4BAA4B,CAAC,CAAE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEvD,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAMC,QAAQ,GAAGZ,WAAW,CAAC,CAAC,CAAC,CAAI;EACnC,MAAMa,QAAQ,GAAGR,WAAW,CAAC,CAAC,CAAC,CAAI;;EAEnC;EACA,MAAM;IAAES,OAAO;IAAEC;EAAM,CAAC,GAAGd,WAAW,CAACe,KAAK,IAAIA,KAAK,CAACC,IAAI,CAAC;;EAE3D;EACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACqB,QAAQ,EAAEC,WAAW,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;;EAE5C;EACA,MAAMuB,YAAY,GAAG,MAAMC,CAAC,IAAI;IAC9BA,CAAC,CAACC,cAAc,CAAC,CAAC,CAAC,CAAY;;IAE/BZ,QAAQ,CAACV,UAAU,CAAC,CAAC,CAAC,CAAC,CAAQ;;IAE/B,IAAI;MACF;MACA,MAAMuB,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGC,OAAO,CAACC,GAAG,CAACC,kBAAkB,cAAc,EAAE;QAC5EC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAAG;QAClDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEhB,KAAK;UAAEE;QAAS,CAAC,CAAC,CAAS;MACpD,CAAC,CAAC;;MAEF;MACA,MAAMe,IAAI,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;;MAElC;MACA,IAAI,CAACX,QAAQ,CAACY,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAACH,IAAI,CAACI,OAAO,IAAI,uBAAuB,CAAC;MAC1D;;MAEA;MACAC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEN,IAAI,CAACO,KAAK,CAAC;;MAEzC;MACA9B,QAAQ,CAACT,YAAY,CAAC;QAAEc,IAAI,EAAE;UAAE0B,EAAE,EAAER,IAAI,CAACS,MAAM;UAAEC,IAAI,EAAEV,IAAI,CAACU;QAAK,CAAC;QAAEH,KAAK,EAAEP,IAAI,CAACO;MAAM,CAAC,CAAC,CAAC;MAEzFI,KAAK,CAAC,mBAAmB,CAAC,CAAC,CAAE;IAC/B,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZ;MACAnC,QAAQ,CAACR,YAAY,CAAC2C,GAAG,CAACR,OAAO,CAAC,CAAC;IACrC;;IAEA;IACA1B,QAAQ,CAAC,SAAS,CAAC;EACrB,CAAC;;EAED;EACA,MAAMmC,WAAW,GAAGA,CAAA,KAAM;IACxBnC,QAAQ,CAAC,GAAG,CAAC;EACf,CAAC;EAED;IAAA;IACE;IACAJ,OAAA;MACEwC,SAAS,EAAC,8EAA8E;MACxFC,KAAK,EAAE;QAAEC,eAAe,EAAE,OAAO7C,MAAM;MAAI,CAAE;MAAA8C,QAAA,gBAG7C3C,OAAA;QAAKwC,SAAS,EAAC;MAA8D;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAGhF/C,OAAA;QAAKwC,SAAS,EAAC,kFAAkF;QAAAG,QAAA,gBAG/F3C,OAAA;UACEgD,OAAO,EAAET,WAAY,CAAiB;UAAA;UACtC,cAAW,OAAO,CAAoB;UAAA;UACtCC,SAAS,EAAC,6FAA6F;UAAAG,QAAA,eAGvG3C,OAAA;YACEiD,KAAK,EAAC,4BAA4B;YAClCT,SAAS,EAAC,SAAS;YACnBU,IAAI,EAAC,MAAM;YACXC,OAAO,EAAC,WAAW;YACnBC,MAAM,EAAC,cAAc;YACrBC,WAAW,EAAE,CAAE;YAAAV,QAAA,eAEf3C,OAAA;cAAMsD,aAAa,EAAC,OAAO;cAACC,cAAc,EAAC,OAAO;cAACC,CAAC,EAAC;YAAsB;cAAAZ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC3E;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC,eAGT/C,OAAA;UAAKyD,GAAG,EAAE3D,WAAY;UAAC4D,GAAG,EAAC,MAAM;UAAClB,SAAS,EAAC;QAAuC;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAGtF/C,OAAA;UAAIwC,SAAS,EAAC,uCAAuC;UAAAG,QAAA,EAAC;QAAO;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,EAGjEzC,KAAK,iBAAIN,OAAA;UAAGwC,SAAS,EAAC,+BAA+B;UAAAG,QAAA,EAAErC;QAAK;UAAAsC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAGlE/C,OAAA;UAAM2D,QAAQ,EAAE9C,YAAa;UAAC2B,SAAS,EAAC,qBAAqB;UAAAG,QAAA,gBAG3D3C,OAAA;YAAA2C,QAAA,gBACE3C,OAAA;cAAO4D,OAAO,EAAC,OAAO;cAACpB,SAAS,EAAC,yCAAyC;cAAAG,QAAA,EAAC;YAAK;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eACxF/C,OAAA;cACEkC,EAAE,EAAC,OAAO;cACV2B,IAAI,EAAC,OAAO;cACZC,KAAK,EAAErD,KAAM,CAAsB;cAAA;cACnCsD,QAAQ,EAAEjD,CAAC,IAAIJ,QAAQ,CAACI,CAAC,CAACkD,MAAM,CAACF,KAAK,CAAE,CAAE;cAAA;cAC1CG,QAAQ,OAA0B;cAAA;cAClCzB,SAAS,EAAC;YAAoF;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC/F,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC,eAGN/C,OAAA;YAAA2C,QAAA,gBACE3C,OAAA;cAAO4D,OAAO,EAAC,UAAU;cAACpB,SAAS,EAAC,yCAAyC;cAAAG,QAAA,EAAC;YAAQ;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eAC9F/C,OAAA;cACEkC,EAAE,EAAC,UAAU;cACb2B,IAAI,EAAC,UAAU;cACfC,KAAK,EAAEnD,QAAS,CAAkB;cAAA;cAClCoD,QAAQ,EAAEjD,CAAC,IAAIF,WAAW,CAACE,CAAC,CAACkD,MAAM,CAACF,KAAK,CAAE,CAAE;cAAA;cAC7CG,QAAQ;cACRzB,SAAS,EAAC;YAAoF;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC/F,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC,eAGN/C,OAAA;YACE6D,IAAI,EAAC,QAAQ;YACbK,QAAQ,EAAE7D,OAAQ,CAAgB;YAAA;YAClCmC,SAAS,EAAE,kCAAkCnC,OAAO,GAAG,aAAa,GAAG,+BAA+B,aAAc;YAAAsC,QAAA,EAGnHtC,OAAO,GAAG,eAAe,GAAG;UAAS;YAAAuC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAChC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;AAEV,CAAC;AAAC7C,EAAA,CAxIID,MAAM;EAAA,QACOV,WAAW,EACXK,WAAW,EAGDJ,WAAW;AAAA;AAAA2E,EAAA,GALlClE,MAAM;AA0IZ,eAAeA,MAAM;AAAC,IAAAkE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}