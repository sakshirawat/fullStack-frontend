{"ast":null,"code":"import { configureStore } from '@reduxjs/toolkit';\nimport userReducer from './userSlice';\nimport { persistStore, persistReducer, FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage'; // defaults to localStorage for web\n\nconst persistConfig = {\n  key: 'user',\n  // key to store in localStorage\n  storage,\n  whitelist: ['user', 'token', 'loading', 'error'] // persist these keys of the user slice\n};\nconst persistedUserReducer = persistReducer(persistConfig, userReducer);\nexport const store = configureStore({\n  reducer: {\n    user: persistedUserReducer\n  },\n  middleware: getDefaultMiddleware => getDefaultMiddleware({\n    serializableCheck: {\n      // Ignore redux-persist actions in serializable check middleware\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\n    }\n  })\n});\nexport const persistor = persistStore(store);","map":{"version":3,"names":["configureStore","userReducer","persistStore","persistReducer","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","storage","persistConfig","key","whitelist","persistedUserReducer","store","reducer","user","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","persistor"],"sources":["/Users/sakshirawat/Desktop/frontend/frontend/src/store/index.js"],"sourcesContent":["import { configureStore } from '@reduxjs/toolkit';\nimport userReducer from './userSlice';\n\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\n\nimport storage from 'redux-persist/lib/storage'; // defaults to localStorage for web\n\nconst persistConfig = {\n  key: 'user', // key to store in localStorage\n  storage,\n  whitelist: ['user', 'token', 'loading', 'error'], // persist these keys of the user slice\n};\n\nconst persistedUserReducer = persistReducer(persistConfig, userReducer);\n\nexport const store = configureStore({\n  reducer: {\n    user: persistedUserReducer,\n  },\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        // Ignore redux-persist actions in serializable check middleware\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }),\n});\n\nexport const persistor = persistStore(store);\n"],"mappings":"AAAA,SAASA,cAAc,QAAQ,kBAAkB;AACjD,OAAOC,WAAW,MAAM,aAAa;AAErC,SACEC,YAAY,EACZC,cAAc,EACdC,KAAK,EACLC,SAAS,EACTC,KAAK,EACLC,OAAO,EACPC,KAAK,EACLC,QAAQ,QACH,eAAe;AAEtB,OAAOC,OAAO,MAAM,2BAA2B,CAAC,CAAC;;AAEjD,MAAMC,aAAa,GAAG;EACpBC,GAAG,EAAE,MAAM;EAAE;EACbF,OAAO;EACPG,SAAS,EAAE,CAAC,MAAM,EAAE,OAAO,EAAE,SAAS,EAAE,OAAO,CAAC,CAAE;AACpD,CAAC;AAED,MAAMC,oBAAoB,GAAGX,cAAc,CAACQ,aAAa,EAAEV,WAAW,CAAC;AAEvE,OAAO,MAAMc,KAAK,GAAGf,cAAc,CAAC;EAClCgB,OAAO,EAAE;IACPC,IAAI,EAAEH;EACR,CAAC;EACDI,UAAU,EAAGC,oBAAoB,IAC/BA,oBAAoB,CAAC;IACnBC,iBAAiB,EAAE;MACjB;MACAC,cAAc,EAAE,CAACjB,KAAK,EAAEC,SAAS,EAAEC,KAAK,EAAEC,OAAO,EAAEC,KAAK,EAAEC,QAAQ;IACpE;EACF,CAAC;AACL,CAAC,CAAC;AAEF,OAAO,MAAMa,SAAS,GAAGpB,YAAY,CAACa,KAAK,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}