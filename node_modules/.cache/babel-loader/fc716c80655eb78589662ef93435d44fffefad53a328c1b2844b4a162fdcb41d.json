{"ast":null,"code":"var _jsxFileName = \"/Users/sakshirawat/Desktop/appointmentFrontend/src/pages/SignUp.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport image3 from '../assets/image3.jpg'; // Background image\nimport logo from '../assets/imageSignIn.webp'; // Logo image\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BASE_URL = process.env.REACT_APP_BASE_URL; // Base URL from environment variables\n\nconst Signup = () => {\n  _s();\n  // State variables to hold form input values\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  // State variables for feedback messages\n  const [error, setError] = useState(null); // To show error messages\n  const [success, setSuccess] = useState(null); // To show success messages\n\n  const navigate = useNavigate(); // React Router's navigation hook\n\n  // Handle form submission\n  const handleSubmit = async e => {\n    e.preventDefault(); // Prevent default form submission behavior (page reload)\n    setError(null); // Clear previous errors\n    setSuccess(null); // Clear previous success messages\n\n    try {\n      // Send POST request to signup endpoint with user input as JSON\n      const response = await fetch(`${BASE_URL}/auth/signup`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        // Set content type to JSON\n        body: JSON.stringify({\n          name,\n          email,\n          password\n        }) // Convert data to JSON string\n      });\n\n      // Parse JSON response from backend\n      const data = await response.json();\n\n      // If response is NOT OK, show error message returned from backend or generic error\n      if (!response.ok) {\n        setError(data.message || 'Signup failed');\n        return;\n      }\n\n      // On success, show success message\n      setSuccess('Signup successful! You can now login.');\n\n      // Clear input fields after successful signup\n      setName('');\n      setEmail('');\n      setPassword('');\n\n      // Navigate user to the signin page\n      navigate('/signin');\n    } catch (err) {\n      // Catch any network or unexpected errors and show message\n      setError('Network error: ' + err.message);\n    }\n  };\n\n  // Handle close button click to navigate back to home page\n  const handleClose = () => {\n    navigate('/'); // Navigate to homepage or root route\n  };\n  return (\n    /*#__PURE__*/\n    // Full screen container with background image and centered content\n    _jsxDEV(\"div\", {\n      className: \"w-full h-screen bg-cover bg-center flex items-center justify-center relative\",\n      style: {\n        backgroundImage: `url(${image3})`\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full max-w-md bg-white p-8 rounded-lg shadow-md relative mx-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleClose // Navigate home when clicked\n          ,\n          \"aria-label\": \"Close\" // Accessibility label\n          ,\n          className: \"absolute top-4 right-4 text-gray-600 hover:text-gray-900 focus:outline-none\",\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            xmlns: \"http://www.w3.org/2000/svg\",\n            className: \"h-6 w-6\",\n            fill: \"none\",\n            viewBox: \"0 0 24 24\",\n            stroke: \"currentColor\",\n            strokeWidth: 2,\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\",\n              d: \"M6 18L18 6M6 6l12 12\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: logo,\n          alt: \"Logo\",\n          className: \"w-16 h-16 mx-auto mb-4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-2xl font-bold mb-6 text-green-600 text-center\",\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 9\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4 p-2 bg-red-100 text-red-700 rounded\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), success && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4 p-2 bg-green-100 text-green-700 rounded\",\n          children: success\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          className: \"space-y-4 text-left\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"name\",\n              className: \"block text-sm font-medium text-gray-700\",\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"name\",\n              type: \"text\",\n              value: name,\n              onChange: e => setName(e.target.value) // Update name state on input change\n              ,\n              required: true // Required field validation\n              ,\n              className: \"w-full mt-1 p-2 border rounded focus:outline-none focus:ring-2 focus:ring-green-400\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"email\",\n              className: \"block text-sm font-medium text-gray-700\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"email\",\n              type: \"email\",\n              value: email,\n              onChange: e => setEmail(e.target.value) // Update email state on input change\n              ,\n              required: true,\n              className: \"w-full mt-1 p-2 border rounded focus:outline-none focus:ring-2 focus:ring-green-400\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"password\",\n              className: \"block text-sm font-medium text-gray-700\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"password\",\n              type: \"password\",\n              value: password,\n              onChange: e => setPassword(e.target.value) // Update password state on input change\n              ,\n              required: true,\n              className: \"w-full mt-1 p-2 border rounded focus:outline-none focus:ring-2 focus:ring-green-400\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"w-full bg-green-600 text-white py-2 rounded hover:bg-green-700 transition\",\n            children: \"Sign Up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }, this)\n  );\n};\n_s(Signup, \"92NAenpkMJboiJkeeIXgcS8H0rM=\", false, function () {\n  return [useNavigate];\n});\n_c = Signup;\nexport default Signup;\nvar _c;\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"names":["React","useState","useNavigate","image3","logo","jsxDEV","_jsxDEV","BASE_URL","process","env","REACT_APP_BASE_URL","Signup","_s","name","setName","email","setEmail","password","setPassword","error","setError","success","setSuccess","navigate","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","ok","message","err","handleClose","className","style","backgroundImage","children","onClick","xmlns","fill","viewBox","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","onSubmit","htmlFor","id","type","value","onChange","target","required","_c","$RefreshReg$"],"sources":["/Users/sakshirawat/Desktop/appointmentFrontend/src/pages/SignUp.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport image3 from '../assets/image3.jpg';      // Background image\nimport logo from '../assets/imageSignIn.webp';  // Logo image\n\nconst BASE_URL = process.env.REACT_APP_BASE_URL;  // Base URL from environment variables\n\nconst Signup = () => {\n  // State variables to hold form input values\n  const [name, setName] = useState('');           \n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  // State variables for feedback messages\n  const [error, setError] = useState(null);       // To show error messages\n  const [success, setSuccess] = useState(null);   // To show success messages\n\n  const navigate = useNavigate();  // React Router's navigation hook\n\n  // Handle form submission\n  const handleSubmit = async e => {\n    e.preventDefault();           // Prevent default form submission behavior (page reload)\n    setError(null);               // Clear previous errors\n    setSuccess(null);             // Clear previous success messages\n\n    try {\n      // Send POST request to signup endpoint with user input as JSON\n      const response = await fetch(`${BASE_URL}/auth/signup`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },    // Set content type to JSON\n        body: JSON.stringify({ name, email, password }),     // Convert data to JSON string\n      });\n\n      // Parse JSON response from backend\n      const data = await response.json();\n\n      // If response is NOT OK, show error message returned from backend or generic error\n      if (!response.ok) {\n        setError(data.message || 'Signup failed');\n        return;\n      }\n\n      // On success, show success message\n      setSuccess('Signup successful! You can now login.');\n\n      // Clear input fields after successful signup\n      setName('');\n      setEmail('');\n      setPassword('');\n\n      // Navigate user to the signin page\n      navigate('/signin');\n    } catch (err) {\n      // Catch any network or unexpected errors and show message\n      setError('Network error: ' + err.message);\n    }\n  };\n\n  // Handle close button click to navigate back to home page\n  const handleClose = () => {\n    navigate('/'); // Navigate to homepage or root route\n  };\n\n  return (\n    // Full screen container with background image and centered content\n    <div \n      className=\"w-full h-screen bg-cover bg-center flex items-center justify-center relative\"\n      style={{ backgroundImage: `url(${image3})` }}\n    >\n      {/* Form container with white background, padding, rounded corners and shadow */}\n      <div className=\"w-full max-w-md bg-white p-8 rounded-lg shadow-md relative mx-4\">\n\n        {/* Close button positioned at top right corner */}\n        <button\n          onClick={handleClose}                 // Navigate home when clicked\n          aria-label=\"Close\"                    // Accessibility label\n          className=\"absolute top-4 right-4 text-gray-600 hover:text-gray-900 focus:outline-none\"\n        >\n          {/* SVG for an \"X\" close icon */}\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            className=\"h-6 w-6\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n            stroke=\"currentColor\"\n            strokeWidth={2}\n          >\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M6 18L18 6M6 6l12 12\" />\n          </svg>\n        </button>\n\n        {/* Logo image centered above the form */}\n        <img src={logo} alt=\"Logo\" className=\"w-16 h-16 mx-auto mb-4\" />\n\n        {/* Heading */}\n        <h2 className=\"text-2xl font-bold mb-6 text-green-600 text-center\">Sign Up</h2>\n\n        {/* Show error message box if error exists */}\n        {error && (\n          <div className=\"mb-4 p-2 bg-red-100 text-red-700 rounded\">{error}</div>\n        )}\n\n        {/* Show success message box if signup was successful */}\n        {success && (\n          <div className=\"mb-4 p-2 bg-green-100 text-green-700 rounded\">{success}</div>\n        )}\n\n        {/* Signup form */}\n        <form onSubmit={handleSubmit} className=\"space-y-4 text-left\">\n          {/* Name input */}\n          <div>\n            <label htmlFor=\"name\" className=\"block text-sm font-medium text-gray-700\">\n              Name\n            </label>\n            <input\n              id=\"name\"\n              type=\"text\"\n              value={name}\n              onChange={e => setName(e.target.value)}   // Update name state on input change\n              required                                  // Required field validation\n              className=\"w-full mt-1 p-2 border rounded focus:outline-none focus:ring-2 focus:ring-green-400\"\n            />\n          </div>\n\n          {/* Email input */}\n          <div>\n            <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700\">\n              Email\n            </label>\n            <input\n              id=\"email\"\n              type=\"email\"\n              value={email}\n              onChange={e => setEmail(e.target.value)}  // Update email state on input change\n              required\n              className=\"w-full mt-1 p-2 border rounded focus:outline-none focus:ring-2 focus:ring-green-400\"\n            />\n          </div>\n\n          {/* Password input */}\n          <div>\n            <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700\">\n              Password\n            </label>\n            <input\n              id=\"password\"\n              type=\"password\"\n              value={password}\n              onChange={e => setPassword(e.target.value)}  // Update password state on input change\n              required\n              className=\"w-full mt-1 p-2 border rounded focus:outline-none focus:ring-2 focus:ring-green-400\"\n            />\n          </div>\n\n          {/* Submit button */}\n          <button\n            type=\"submit\"\n            className=\"w-full bg-green-600 text-white py-2 rounded hover:bg-green-700 transition\"\n          >\n            Sign Up\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default Signup;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}