{"ast":null,"code":"var _jsxFileName = \"/Users/sakshirawat/Desktop/frontend/frontend/src/components/ProtectedRoute.jsx\",\n  _s = $RefreshSig$();\n// src/components/ProtectedRoute.jsx\nimport React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  children\n}) => {\n  _s();\n  const user = useSelector(state => state.user.user.name);\n  return token ? children : /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/signin\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 29\n  }, this);\n};\n_s(ProtectedRoute, \"ODc3cjw/vvoWaLFqHWcEGODyOfo=\", false, function () {\n  return [useSelector];\n});\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","Navigate","useSelector","jsxDEV","_jsxDEV","ProtectedRoute","children","_s","user","state","name","token","to","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/sakshirawat/Desktop/frontend/frontend/src/components/ProtectedRoute.jsx"],"sourcesContent":["\n// src/components/ProtectedRoute.jsx\nimport React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\n\nconst ProtectedRoute = ({ children }) => {\n  const user= useSelector((state)=>state.user.user.name)\n\n  return token ? children : <Navigate to=\"/signin\" />;\n};\n\nexport default ProtectedRoute;\n\n"],"mappings":";;AACA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,SAASC,WAAW,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,cAAc,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACvC,MAAMC,IAAI,GAAEN,WAAW,CAAEO,KAAK,IAAGA,KAAK,CAACD,IAAI,CAACA,IAAI,CAACE,IAAI,CAAC;EAEtD,OAAOC,KAAK,GAAGL,QAAQ,gBAAGF,OAAA,CAACH,QAAQ;IAACW,EAAE,EAAC;EAAS;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACrD,CAAC;AAACT,EAAA,CAJIF,cAAc;EAAA,QACNH,WAAW;AAAA;AAAAe,EAAA,GADnBZ,cAAc;AAMpB,eAAeA,cAAc;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}